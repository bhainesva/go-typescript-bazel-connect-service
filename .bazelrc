startup --host_jvm_args=-DBAZEL_TRACK_SOURCE_DIRECTORIES=1

common --enable_platform_specific_config
test --test_output=errors

# Go requires a C toolchain that accepts options and emits errors like
# gcc or clang. The Go SDK does not support MSVC.
build:windows --cpu=x64_windows
build:windows --compiler=mingw-gcc

build:check --all_incompatible_changes

common:ci --color=no
build:ci --verbose_failures
build:ci --sandbox_debug
build:ci --spawn_strategy=standalone
build:ci --genrule_strategy=standalone
test:ci --test_strategy=standalone

# Incompatible flags to test in a dedicated CI pipeline.
build:incompatible --incompatible_load_proto_rules_from_bzl
build:incompatible --incompatible_enable_cc_toolchain_resolution
build:incompatible --incompatible_config_setting_private_default_visibility
build:incompatible --incompatible_enforce_config_setting_visibility
build:incompatible --incompatible_disallow_empty_glob
build:incompatible --incompatible_disable_starlark_host_transitions
build:incompatible --nolegacy_external_runfiles
build:incompatible --incompatible_enable_proto_toolchain_resolution
# Also enable all incompatible flags in go_bazel_test by default.
# TODO: Add --incompatible_disallow_empty_glob once
# https://github.com/bazelbuild/bazel-gazelle/pull/1405 has been released.
test:incompatible --test_env=GO_BAZEL_TEST_BAZELFLAGS='--incompatible_load_proto_rules_from_bzl --incompatible_enable_cc_toolchain_resolution --incompatible_config_setting_private_default_visibility --incompatible_enforce_config_setting_visibility --incompatible_disable_starlark_host_transitions --nolegacy_external_runfiles --incompatible_enable_proto_toolchain_resolution'

# Enable Bzlmod for every Bazel command
common --enable_bzlmod

#### Copied from /examples/frontend
# passes an argument `--skipLibCheck` to *every* spawn of the TypeScript compiler, tsc
common --@aspect_rules_ts//ts:skipLibCheck=always

# Required for rules_js
build --enable_runfiles

# Allow the Bazel server to check directory sources for changes.
# Recommended when using copy_directory, see
# https://github.com/aspect-build/bazel-lib/blob/main/docs/copy_directory.md
startup --host_jvm_args=-DBAZEL_TRACK_SOURCE_DIRECTORIES=1

###########################
# Linting
# Enable with --config=lint
# This is demonstrated by the next.js example:
# cd next.js; npm run lint
build:lint --aspects=//:lint.bzl%eslint
# Gather lint reports.
# Note: --remote_download_regex is for RBE and was added in Bazel 7.
build:lint --output_groups=rules_lint_report --remote_download_regex='.*aspect_rules_lint.report'
# Cause build failures when there are lint warnings.
# This is a simple configuration, but you probably want to report them as code review comments instead.
# See https://github.com/aspect-build/rules_lint/blob/main/docs/linting.md#usage
build:lint --aspects_parameters=fail_on_violation=true --keep_going

